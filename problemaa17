S = [0, 3, 3, 5, 4, 4, 3, 5, 5, 4, 3, 6, 6, 8, 8, 7, 7, 9, 8, 8]
D = [0, 3, 6, 6, 5, 5, 5, 7, 6, 6]
H = 7
T = 8
 
def problema17():

    total = 0
    for i in range(1,1000):
        c = i % 10 # singles digit
        b = ((i % 100) - c) / 10 # tens digit
        a = ((i % 1000) - (b * 10) - c) / 100 # hundreds digit
 
        if a != 0:
            total += S[a] + H # "S[a] hundred
            if b != 0 or c != 0:
                total += 3 # "and"
        if b == 0 or b == 1:
            total += S[b * 10 + c]
        else:
            total += D[b] + S[c]
 
        total += S[1] + T

    print (total)


#Solução: 21124


"""Começamos por criar uma lista de singles, os números de um a vinte, que, para representarmos, precisamos apenas de uma palavra.
Nessa lista os valores são o número de letras da palavra dos números.

Da mesma forma temos uma lista idêntica para os valores 20, 30, 40, 50, 60, 70, 80 e 90. Temos também uma lista para os valores das centenas e outra para os milhares.

Correndo o ciclo, "C" será o dígito das unidades. "B" o das dezenas e "A" o das centenas.

Depois verificamos se algum dos algarismos é diferente de zero porque isso tem implicações na contagem das letras. Com os condicionais conseguimos descriminar todos os casos.

Finalmente o total é incrementado com o valor encontrado."""
