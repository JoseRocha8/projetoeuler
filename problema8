Encontrar, no número de 400 algarismos, o maior produto de 13 dígitos adjacentes.

def problema8():

     s = '7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450'
     produto = 0

     for i in range(0, len(s)-12):

          produtoatual = 1

          for x in range(i,i+13):
               produtoatual = produtoatual * int(s[x])

          if (produtoatual > produto):
               produto = produtoatual

     print (produto)


No problema 8 começamos com um ciclo onde i, o índice, vai correr 13 "espaços" da nossa espécie de string porque na verdade
trata-se de um número. Como queremos o produto de 13 algarismos vamos andar sempre a verificar o produto entre 13 índices.
Iniciamos uma variável chamada produtoatual onde vamos guardar sempre os produtos que vamos encontrando. Dentro do primeiro
ciclo temos um outro em que o range é o número de 13 dígitos cujo produto vamos descobrir. Multiplicando indice a indice,
o resultado fica guardado em produtoatual.

Com uma condição de ">" podemos ficar a saber se o produto atual é maior que o o que tínhamos anteriormente. De início,
a variável produto começa a 0. O primeiro produto encontrado grava por cima. O 2º, 3º, 4º e por aí fora só irá gravar se 
"produtoatual>produto" já que nós só queremos o maior dos produtos.

No final o produto que ficar guardado é o maior.

NOTA: No ciclo incial o range, tamanho, vai de 0, início do número, até ao 12º espaço a contar da direita para a esquerda,
valor que é dado por (len(s)-12) já que não fazia sentido estar a contar para lá daí.

Solução: 23514624000
